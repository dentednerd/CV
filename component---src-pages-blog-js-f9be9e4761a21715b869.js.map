{"version":3,"sources":["webpack:///./src/components/atoms/CardImage/index.js","webpack:///./src/components/molecules/Card/index.js","webpack:///./src/components/atoms/Grid/grid-container.js","webpack:///./src/components/atoms/Grid/grid-item.js","webpack:///./src/pages/blog.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/atoms/Container/index.js","webpack:///./src/components/atoms/WhiteBand/index.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/atoms/RedBand/index.js","webpack:///./src/components/organisms/Header/index.js","webpack:///./src/components/molecules/IconLinks/index.js","webpack:///./src/components/molecules/BlogHeader/index.js"],"names":["CardImage","props","imgSrc","ImageDiv","styled","_templateObject","react_default","a","createElement","Card","article","StyledCard","Card_templateObject","gatsby_browser_entry","to","fields","slug","frontmatter","featuredImage","atoms_CardImage","childImageSharp","sizes","src","title","date","excerpt","GridContainer","children","GridContainerDiv","grid_container_templateObject","GridItem","GridItemDiv","grid_item_templateObject","__webpack_require__","d","__webpack_exports__","query","_ref","data","className","WhiteBand","Header","BlogHeader","grid_container","allMarkdownRemark","edges","map","_ref2","node","grid_item","key","id","molecules_Card","IconLinks","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","Consumer","staticQueryData","render","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","Container","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","_public_static_d_3892401927_json__WEBPACK_IMPORTED_MODULE_1__","WhiteBandContainer","react__WEBPACK_IMPORTED_MODULE_1___default","_Container__WEBPACK_IMPORTED_MODULE_3__","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","RedBandContainer","RedBand","StyledHeader","TitleBlock","_templateObject2","Title","_templateObject3","Subtitle","_templateObject4","Nav","_templateObject5","NavLink","Link","_templateObject6","componentDidMount","options","strings","typeSpeed","backSpeed","loop","loopCount","Infinity","this","typed","Typed","el","componentWillUnmount","destroy","_this","style","whiteSpace","ref","Component","_fortawesome_fontawesome_svg_core__WEBPACK_IMPORTED_MODULE_1__","_fortawesome_react_fontawesome__WEBPACK_IMPORTED_MODULE_2__","_fortawesome_free_solid_svg_icons__WEBPACK_IMPORTED_MODULE_3__","_fortawesome_free_brands_svg_icons__WEBPACK_IMPORTED_MODULE_4__","library","add","faLinkedin","faTwitterSquare","faGithubSquare","faEnvelopeSquare","href","icon","target","rel","_atoms_RedBand__WEBPACK_IMPORTED_MODULE_1__"],"mappings":"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","file":"component---src-pages-blog-js-f9be9e4761a21715b869.js","sourcesContent":["import React from 'react'\nimport styled from '@emotion/styled'\n\nconst CardImage = props => {\n  const { imgSrc } = props\n\n  const ImageDiv = styled('div')`\n    background-image: url(${imgSrc});\n    background-size: cover;\n    background-position: center;\n    height: 14em;\n    width: 100%;\n    margin: 0;\n    padding: 0;\n  `\n\n  return <ImageDiv />\n}\n\nexport default CardImage\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport { Link } from 'gatsby'\nimport CardImage from '../../atoms/CardImage'\n\nconst Card = props => {\n  const { article } = props\n\n  const StyledCard = styled('article')`\n    background: #fff;\n    padding: 0;\n    border: solid 1px #666;\n    box-shadow: 3px 3px 3px #ccc;\n    overflow: hidden;\n\n    section {\n      padding: 1em;\n    }\n\n    :hover {\n      box-shadow: none;\n    }\n\n    img {\n      height: 8em;\n      min-width: 100%;\n    }\n\n    h2 {\n      white-space: nowrap;\n      overflow: hidden;\n      text-overflow: ellipsis;\n    }\n\n    h3, p {\n      color: #333;\n    }\n\n    h3 {\n      font-weight: bold;\n    }\n\n    @media (max-width: 768px) {\n      box-shadow: none;\n      border: none;\n\n      section {\n        padding: 1em 0;\n      }\n    }\n  `\n\n  return (\n    <Link to={article.fields.slug}>\n      <StyledCard>\n        {article.frontmatter.featuredImage && (\n          <CardImage imgSrc={article.frontmatter.featuredImage.childImageSharp.sizes.src} />\n        )}\n        <section>\n          <h2>\n            {article.frontmatter.title}\n          </h2>\n          <h3>\n            {article.frontmatter.date}\n          </h3>\n          <p>\n            {article.excerpt}\n          </p>\n        </section>\n      </StyledCard>\n    </Link>\n  )\n}\n\nexport default Card\n","import React from 'react'\nimport styled from '@emotion/styled'\n\nconst GridContainer = (props) => {\n  const { children } = props\n  const GridContainerDiv = styled('div')`\n    label: GridContainer;\n    display: flex;\n    flex-flow: row wrap;\n    justify-content: flex-start;\n    align-items: flex-start;\n    width: 100%;\n    max-width: 100%;\n    margin: 0;\n    padding: 0;\n    font-size: 0;\n  `\n\n  return (\n    <GridContainerDiv>\n      {children}\n    </GridContainerDiv>\n  )\n}\n\nexport default GridContainer\n","import React from 'react'\nimport styled from '@emotion/styled'\n\nconst GridItem = (props) => {\n  const { children } = props\n  const GridItemDiv = styled('div')`\n    label: GridItem;\n    margin: 0 1em 1em 0;\n    padding: 0;\n    vertical-align: top;\n    box-sizing: border-box;\n    font-size: 1rem;\n    width: calc(33.33% - 1em);\n\n    @media (max-width: 768px) {\n      width: 100%;\n      min-width: 100%;\n      margin: 0 0 1em;\n    }\n  `\n\n  // need breakpoints\n\n  return (\n    <GridItemDiv>\n      {children}\n    </GridItemDiv>\n  )\n}\n\nexport default GridItem\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport WhiteBand from \"../components/atoms/WhiteBand\"\nimport Header from '../components/organisms/Header'\nimport BlogHeader from '../components/molecules/BlogHeader'\nimport IconLinks from '../components/molecules/IconLinks'\nimport Card from '../components/molecules/Card'\nimport { GridContainer, GridItem } from '../components/atoms/Grid'\n\nimport './style.css'\n\nexport default ({ data }) => {\n  return (\n    <div className=\"blog\">\n      <WhiteBand>\n        <Header />\n      </WhiteBand>\n      <BlogHeader />\n      <WhiteBand>\n        <GridContainer>\n          {data.allMarkdownRemark.edges.map(({ node }) => (\n            <GridItem key={node.id}>\n              <Card article={node} />\n            </GridItem>\n          ))}\n        </GridContainer>\n        <IconLinks />\n      </WhiteBand>\n    </div>\n  )\n}\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n            featuredImage {\n              childImageSharp{\n                sizes(maxWidth: 630) {\n                    ...GatsbyImageSharpSizes\n                }\n              }\n            }\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport styled from '@emotion/styled'\nimport { StaticQuery, graphql } from \"gatsby\"\n\nconst Container = styled('div')`\n  position: relative;\n  margin: 0 auto;\n  width: 96vw;\n  max-width: 1024px;\n  padding: 0 2vw;\n`\n\nexport default ({ children }) => (\n  <StaticQuery\n    query={graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <Container>\n        {children}\n      </Container>\n    )}\n  />\n)\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport Container from '../Container'\n\nconst WhiteBandContainer = styled('div')`\n  background-color: #fff;\n  width: 100%;\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: 1em 0;\n  color: #333;\n  margin-bottom: 0.5em;\n\n  h2 {\n    font-size: 1.5em;\n    font-weight: 600;\n    font-family: 'Roboto Slab', serif;\n    color: #c30;\n  }\n`\n\nconst WhiteBand = props => {\n  const { children } = props\n  return (\n    <WhiteBandContainer>\n      <Container>\n        {children}\n      </Container>\n    </WhiteBandContainer>\n  )\n}\n\nexport default WhiteBand\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  if (!pageResources) {\n    return null\n  }\n\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport styled from '@emotion/styled'\nimport Container from '../Container'\n\nconst RedBandContainer = styled('div')`\n  background-color: #c30;\n  width: 100%;\n  display: flex;\n  flex-flow: row nowrap;\n  align-items: center;\n  padding: 1em 0;\n  color: white;\n  margin-bottom: 0.5em;\n\n  h2 {\n    font-size: 1.5em;\n    font-weight: 600;\n    font-family: 'Roboto Slab', serif;\n    color: white;\n  }\n`\n\nconst RedBand = props => {\n  const { children } = props\n  return (\n    <RedBandContainer>\n      <Container>\n        {children}\n      </Container>\n    </RedBandContainer>\n  )\n}\n\nexport default RedBand\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport styled from '@emotion/styled'\nimport Typed from 'typed.js'\n\nconst StyledHeader = styled('header')`\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: space-between;\n  align-items: center;\n  color:#333;\n  font-family: 'Lato', sans-serif;\n  margin: 1em 0;\n\n  @media (max-width: 768px) {\n    flex-flow: column nowrap;\n    align-items: flex-start;\n    margin-bottom: 0;\n  }\n`\n\nconst TitleBlock = styled('div')`\n  display: flex;\n  flex-flow: column nowrap;\n  justify-content: center;\n  align-items: flex-start;\n`\n\nconst Title = styled('h1')`\n  font-size:2em;\n  font-weight: 700;\n  font-family: 'Roboto Slab', serif;\n  color: #333;\n  margin: 0 2vw 0 0;\n\n  span {\n    color: #c30;\n  }\n`\n\nconst Subtitle = styled('div')`\n  font-size:1.5em;\n  line-height: 1.5em;\n  margin-bottom: 0;\n`\n\nconst Nav = styled('nav')`\n  display: flex;\n  flex-flow: row nowrap;\n  justify-content: space-between;\n  align-items: center;\n\n  @media (max-width: 768px) {\n    width: 100%;\n    margin-top: 1em;\n    border-top: solid 1px #666;\n    border-bottom: solid 1px #666;\n    margin-bottom: 1em;\n  }\n`\n\nconst NavLink = styled(Link)`\n  display: block;\n  text-align: center;\n  width: 100px;\n  color: black;\n\n  &:hover {\n    background-color: #c30;\n    border-radius: 6px;\n    color: white;\n  }\n`\n\nclass Header extends React.Component {\n  componentDidMount() {\n    const strings = [\"React developer.\", \"Coding mentor.\", \"Crazy cat lady.\"]\n\n    const options = {\n      strings,\n      typeSpeed: 50,\n      backSpeed: 50,\n      loop: true,\n      loopCount: Infinity,\n    }\n    this.typed = new Typed(this.el, options)\n  }\n\n  componentWillUnmount() {\n    this.typed.destroy()\n  }\n\n  render() {\n    return (\n      <StyledHeader>\n        <TitleBlock>\n          <Title>\n            &lt;\n            <span>JoanneImlay</span>\n            /&gt;\n          </Title>\n          <Subtitle>\n            <span\n              style={{ whiteSpace: 'pre' }}\n              ref={(el) => { this.el = el }}\n            />\n          </Subtitle>\n        </TitleBlock>\n        <Nav>\n          <NavLink to='/'>Home</NavLink>\n          <NavLink to='/blog'>Blog</NavLink>\n          <NavLink to='/portfolio'>Portfolio</NavLink>\n        </Nav>\n      </StyledHeader>\n    )\n  }\n}\n\nexport default Header","import React from 'react'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEnvelopeSquare } from '@fortawesome/free-solid-svg-icons'\nimport { faLinkedin, faTwitterSquare, faGithubSquare } from '@fortawesome/free-brands-svg-icons'\n\nimport './IconLinks.css'\n\nlibrary.add(faLinkedin)\nlibrary.add(faTwitterSquare)\nlibrary.add(faGithubSquare)\nlibrary.add(faEnvelopeSquare)\n\nconst IconLinks = () => {\n  return (\n    <div className=\"icons\">\n\n      <a href='mailto:jo.imlay@gmail.com'>\n        <FontAwesomeIcon icon={faEnvelopeSquare} />\n      </a>\n\n      <a href='https://www.linkedin.com/in/joanne-imlay-4a7a7056/' target=\"_blank\" rel=\"noopener noreferrer\">\n        <FontAwesomeIcon icon={faLinkedin} />\n      </a>\n\n      <a href=\"https://www.github.com/dentednerd\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <FontAwesomeIcon icon={faGithubSquare} />\n      </a>\n\n      <a href=\"https://www.twitter.com/dentednerd\" target=\"_blank\" rel=\"noopener noreferrer\">\n        <FontAwesomeIcon icon={faTwitterSquare} />\n      </a>\n\n    </div>\n  )\n}\n\nexport default IconLinks\n","import React from 'react'\nimport RedBand from '../../atoms/RedBand'\n\nconst BlogHeader = () => (\n  <RedBand>\n    <h2>{\"<Blog />\"}</h2>\n  </RedBand>\n)\n\nexport default BlogHeader"],"sourceRoot":""}