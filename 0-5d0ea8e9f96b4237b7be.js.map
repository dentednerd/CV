{"version":3,"sources":["webpack:///./node_modules/gatsby-link/index.js","webpack:///./node_modules/@babel/runtime/helpers/objectWithoutPropertiesLoose.js","webpack:///./node_modules/@babel/runtime/helpers/extends.js","webpack:///./node_modules/typed.js/lib/typed.js"],"names":["_interopRequireDefault","__webpack_require__","exports","__esModule","withPrefix","navigateTo","replace","push","navigate","default","_objectWithoutPropertiesLoose2","_extends2","_inheritsLoose2","_assertThisInitialized2","_defineProperty2","_propTypes","_react","_router","_gatsby","path","normalizePath","NavLinkPropTypes","activeClassName","string","activeStyle","object","GatsbyLink","_React$Component","props","_this","call","this","_ref","isCurrent","className","filter","Boolean","join","style","IOSupported","window","IntersectionObserver","state","handleRef","bind","_proto","prototype","componentDidUpdate","prevProps","prevState","to","___loader","enqueue","parsePath","pathname","componentDidMount","ref","el","cb","io","_this2","innerRef","entries","forEach","entry","target","isIntersecting","intersectionRatio","unobserve","disconnect","observe","render","_this3","_this$props","_this$props$getProps","getProps","defaultGetProps","_onClick","onClick","_onMouseEnter","onMouseEnter","rest","prefixedTo","createElement","Link","e","hovering","button","defaultPrevented","metaKey","altKey","ctrlKey","shiftKey","preventDefault","Component","propTypes","func","isRequired","bool","_default","options","___navigate","console","warn","___push","___replace","module","source","excluded","key","i","sourceKeys","Object","keys","length","indexOf","_extends","assign","arguments","hasOwnProperty","apply","factory","modules","installedModules","moduleId","id","loaded","m","c","p","defineProperty","value","_createClass","defineProperties","descriptor","enumerable","configurable","writable","Constructor","protoProps","staticProps","_initializerJs","_htmlParserJs","Typed","elementId","instance","TypeError","_classCallCheck","initializer","load","begin","pause","status","start","stop","typingComplete","toggleBlinking","onStop","arrayPos","typewrite","curString","curStrPos","backspace","onStart","reset","onDestroy","restart","undefined","clearInterval","timeout","replaceText","cursor","parentNode","removeChild","strPos","curLoop","insertCursor","onReset","shuffleStringsIfNeeded","bindInputFocusEvents","bindFocusEvents","setTimeout","currentElContent","strings","sequence","startDelay","fadeOut","classList","contains","fadeOutClass","remove","humanize","humanizer","typeSpeed","numChars","htmlParser","typeHtmlChars","pauseTime","substr","charAt","test","skip","exec","parseInt","temporaryPause","onTypingPaused","substring","stringBeforeSkip","stringSkipped","stringAfterSkip","doneTyping","keepTyping","onTypingResumed","setPauseStatus","preStringTyped","nextString","onStringTyped","complete","loop","loopCount","backDelay","_this4","initFadeOut","backSpeed","backSpaceHtmlChars","curStringAtPosition","smartBackspace","stopNum","onLastStringBackspaced","onComplete","isTyping","isBlinking","cursorBlinking","add","speed","Math","round","random","shuffle","sort","_this5","fadeOutDelay","str","attr","setAttribute","isInput","contentType","innerHTML","textContent","_this6","addEventListener","showCursor","document","cursorChar","insertBefore","nextSibling","obj","_defaultsJs","_defaultsJs2","Initializer","self","querySelector","tagName","toLowerCase","elContent","getAttribute","isPaused","map","s","trim","stringsElement","display","Array","slice","children","stringsLength","stringEl","getCurrentElContent","autoInsertCss","appendAnimationCss","css","type","innerCss","body","appendChild","defaults","Infinity","HTMLParser","curChar","endTag"],"mappings":"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","file":"0-5d0ea8e9f96b4237b7be.js","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.withPrefix = withPrefix;\nexports.navigateTo = exports.replace = exports.push = exports.navigate = exports.default = void 0;\n\nvar _objectWithoutPropertiesLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutPropertiesLoose\"));\n\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nvar _react = _interopRequireDefault(require(\"react\"));\n\nvar _router = require(\"@reach/router\");\n\nvar _gatsby = require(\"gatsby\");\n\n/*global __PATH_PREFIX__ */\nfunction withPrefix(path) {\n  return normalizePath(__PATH_PREFIX__ + \"/\" + path);\n}\n\nfunction normalizePath(path) {\n  return path.replace(/\\/+/g, \"/\");\n}\n\nvar NavLinkPropTypes = {\n  activeClassName: _propTypes.default.string,\n  activeStyle: _propTypes.default.object // Set up IntersectionObserver\n\n};\n\nvar handleIntersection = function handleIntersection(el, cb) {\n  var io = new window.IntersectionObserver(function (entries) {\n    entries.forEach(function (entry) {\n      if (el === entry.target) {\n        // Check if element is within viewport, remove listener, destroy observer, and run link callback.\n        // MSEdge doesn't currently support isIntersecting, so also test for  an intersectionRatio > 0\n        if (entry.isIntersecting || entry.intersectionRatio > 0) {\n          io.unobserve(el);\n          io.disconnect();\n          cb();\n        }\n      }\n    });\n  }); // Add element to the observer\n\n  io.observe(el);\n};\n\nvar GatsbyLink =\n/*#__PURE__*/\nfunction (_React$Component) {\n  (0, _inheritsLoose2.default)(GatsbyLink, _React$Component);\n\n  function GatsbyLink(props) {\n    var _this;\n\n    _this = _React$Component.call(this) || this; // Default to no support for IntersectionObserver\n\n    (0, _defineProperty2.default)((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)), \"defaultGetProps\", function (_ref) {\n      var isCurrent = _ref.isCurrent;\n\n      if (isCurrent) {\n        return {\n          className: [_this.props.className, _this.props.activeClassName].filter(Boolean).join(\" \"),\n          style: (0, _extends2.default)({}, _this.props.style, _this.props.activeStyle)\n        };\n      }\n\n      return null;\n    });\n    var IOSupported = false;\n\n    if (typeof window !== \"undefined\" && window.IntersectionObserver) {\n      IOSupported = true;\n    }\n\n    _this.state = {\n      IOSupported: IOSupported\n    };\n    _this.handleRef = _this.handleRef.bind((0, _assertThisInitialized2.default)((0, _assertThisInitialized2.default)(_this)));\n    return _this;\n  }\n\n  var _proto = GatsbyLink.prototype;\n\n  _proto.componentDidUpdate = function componentDidUpdate(prevProps, prevState) {\n    // Preserve non IO functionality if no support\n    if (this.props.to !== prevProps.to && !this.state.IOSupported) {\n      ___loader.enqueue((0, _gatsby.parsePath)(this.props.to).pathname);\n    }\n  };\n\n  _proto.componentDidMount = function componentDidMount() {\n    // Preserve non IO functionality if no support\n    if (!this.state.IOSupported) {\n      ___loader.enqueue((0, _gatsby.parsePath)(this.props.to).pathname);\n    }\n  };\n\n  _proto.handleRef = function handleRef(ref) {\n    var _this2 = this;\n\n    this.props.innerRef && this.props.innerRef(ref);\n\n    if (this.state.IOSupported && ref) {\n      // If IO supported and element reference found, setup Observer functionality\n      handleIntersection(ref, function () {\n        ___loader.enqueue((0, _gatsby.parsePath)(_this2.props.to).pathname);\n      });\n    }\n  };\n\n  _proto.render = function render() {\n    var _this3 = this;\n\n    var _this$props = this.props,\n        to = _this$props.to,\n        _this$props$getProps = _this$props.getProps,\n        getProps = _this$props$getProps === void 0 ? this.defaultGetProps : _this$props$getProps,\n        _onClick = _this$props.onClick,\n        _onMouseEnter = _this$props.onMouseEnter,\n        $activeClassName = _this$props.activeClassName,\n        $activeStyle = _this$props.activeStyle,\n        $ref = _this$props.ref,\n        $innerRef = _this$props.innerRef,\n        state = _this$props.state,\n        replace = _this$props.replace,\n        rest = (0, _objectWithoutPropertiesLoose2.default)(_this$props, [\"to\", \"getProps\", \"onClick\", \"onMouseEnter\", \"activeClassName\", \"activeStyle\", \"ref\", \"innerRef\", \"state\", \"replace\"]);\n    var prefixedTo = withPrefix(to);\n    return _react.default.createElement(_router.Link, (0, _extends2.default)({\n      to: prefixedTo,\n      state: state,\n      getProps: getProps,\n      innerRef: this.handleRef,\n      onMouseEnter: function onMouseEnter(e) {\n        // eslint-disable-line\n        _onMouseEnter && _onMouseEnter(e);\n\n        ___loader.hovering((0, _gatsby.parsePath)(to).pathname);\n      },\n      onClick: function onClick(e) {\n        // eslint-disable-line\n        _onClick && _onClick(e);\n\n        if (e.button === 0 && // ignore right clicks\n        !_this3.props.target && // let browser handle \"target=_blank\"\n        !e.defaultPrevented && // onClick prevented default\n        !e.metaKey && // ignore clicks with modifier keys...\n        !e.altKey && !e.ctrlKey && !e.shiftKey) {\n          e.preventDefault(); // Make sure the necessary scripts and data are\n          // loaded before continuing.\n\n          navigate(to, {\n            state: state,\n            replace: replace\n          });\n        }\n\n        return true;\n      }\n    }, rest));\n  };\n\n  return GatsbyLink;\n}(_react.default.Component);\n\nGatsbyLink.propTypes = (0, _extends2.default)({}, NavLinkPropTypes, {\n  innerRef: _propTypes.default.func,\n  onClick: _propTypes.default.func,\n  to: _propTypes.default.string.isRequired,\n  replace: _propTypes.default.bool\n});\nvar _default = GatsbyLink;\nexports.default = _default;\n\nvar navigate = function navigate(to, options) {\n  window.___navigate(withPrefix(to), options);\n};\n\nexports.navigate = navigate;\n\nvar push = function push(to) {\n  console.warn(\"The \\\"push\\\" method is now deprecated and will be removed in Gatsby v3. Please use \\\"navigate\\\" instead.\");\n\n  window.___push(withPrefix(to));\n};\n\nexports.push = push;\n\nvar replace = function replace(to) {\n  console.warn(\"The \\\"replace\\\" method is now deprecated and will be removed in Gatsby v3. Please use \\\"navigate\\\" instead.\");\n\n  window.___replace(withPrefix(to));\n}; // TODO: Remove navigateTo for Gatsby v3\n\n\nexports.replace = replace;\n\nvar navigateTo = function navigateTo(to) {\n  console.warn(\"The \\\"navigateTo\\\" method is now deprecated and will be removed in Gatsby v3. Please use \\\"navigate\\\" instead.\");\n  return push(to);\n};\n\nexports.navigateTo = navigateTo;","function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n\nmodule.exports = _objectWithoutPropertiesLoose;","function _extends() {\n  module.exports = _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nmodule.exports = _extends;","/*!\n * \n *   typed.js - A JavaScript Typing Animation Library\n *   Author: Matt Boldt <me@mattboldt.com>\n *   Version: v2.0.9\n *   Url: https://github.com/mattboldt/typed.js\n *   License(s): MIT\n * \n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"Typed\"] = factory();\n\telse\n\t\troot[\"Typed\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar _initializerJs = __webpack_require__(1);\n\t\n\tvar _htmlParserJs = __webpack_require__(3);\n\t\n\t/**\n\t * Welcome to Typed.js!\n\t * @param {string} elementId HTML element ID _OR_ HTML element\n\t * @param {object} options options object\n\t * @returns {object} a new Typed object\n\t */\n\t\n\tvar Typed = (function () {\n\t  function Typed(elementId, options) {\n\t    _classCallCheck(this, Typed);\n\t\n\t    // Initialize it up\n\t    _initializerJs.initializer.load(this, options, elementId);\n\t    // All systems go!\n\t    this.begin();\n\t  }\n\t\n\t  /**\n\t   * Toggle start() and stop() of the Typed instance\n\t   * @public\n\t   */\n\t\n\t  _createClass(Typed, [{\n\t    key: 'toggle',\n\t    value: function toggle() {\n\t      this.pause.status ? this.start() : this.stop();\n\t    }\n\t\n\t    /**\n\t     * Stop typing / backspacing and enable cursor blinking\n\t     * @public\n\t     */\n\t  }, {\n\t    key: 'stop',\n\t    value: function stop() {\n\t      if (this.typingComplete) return;\n\t      if (this.pause.status) return;\n\t      this.toggleBlinking(true);\n\t      this.pause.status = true;\n\t      this.options.onStop(this.arrayPos, this);\n\t    }\n\t\n\t    /**\n\t     * Start typing / backspacing after being stopped\n\t     * @public\n\t     */\n\t  }, {\n\t    key: 'start',\n\t    value: function start() {\n\t      if (this.typingComplete) return;\n\t      if (!this.pause.status) return;\n\t      this.pause.status = false;\n\t      if (this.pause.typewrite) {\n\t        this.typewrite(this.pause.curString, this.pause.curStrPos);\n\t      } else {\n\t        this.backspace(this.pause.curString, this.pause.curStrPos);\n\t      }\n\t      this.options.onStart(this.arrayPos, this);\n\t    }\n\t\n\t    /**\n\t     * Destroy this instance of Typed\n\t     * @public\n\t     */\n\t  }, {\n\t    key: 'destroy',\n\t    value: function destroy() {\n\t      this.reset(false);\n\t      this.options.onDestroy(this);\n\t    }\n\t\n\t    /**\n\t     * Reset Typed and optionally restarts\n\t     * @param {boolean} restart\n\t     * @public\n\t     */\n\t  }, {\n\t    key: 'reset',\n\t    value: function reset() {\n\t      var restart = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n\t\n\t      clearInterval(this.timeout);\n\t      this.replaceText('');\n\t      if (this.cursor && this.cursor.parentNode) {\n\t        this.cursor.parentNode.removeChild(this.cursor);\n\t        this.cursor = null;\n\t      }\n\t      this.strPos = 0;\n\t      this.arrayPos = 0;\n\t      this.curLoop = 0;\n\t      if (restart) {\n\t        this.insertCursor();\n\t        this.options.onReset(this);\n\t        this.begin();\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Begins the typing animation\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'begin',\n\t    value: function begin() {\n\t      var _this = this;\n\t\n\t      this.typingComplete = false;\n\t      this.shuffleStringsIfNeeded(this);\n\t      this.insertCursor();\n\t      if (this.bindInputFocusEvents) this.bindFocusEvents();\n\t      this.timeout = setTimeout(function () {\n\t        // Check if there is some text in the element, if yes start by backspacing the default message\n\t        if (!_this.currentElContent || _this.currentElContent.length === 0) {\n\t          _this.typewrite(_this.strings[_this.sequence[_this.arrayPos]], _this.strPos);\n\t        } else {\n\t          // Start typing\n\t          _this.backspace(_this.currentElContent, _this.currentElContent.length);\n\t        }\n\t      }, this.startDelay);\n\t    }\n\t\n\t    /**\n\t     * Called for each character typed\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'typewrite',\n\t    value: function typewrite(curString, curStrPos) {\n\t      var _this2 = this;\n\t\n\t      if (this.fadeOut && this.el.classList.contains(this.fadeOutClass)) {\n\t        this.el.classList.remove(this.fadeOutClass);\n\t        if (this.cursor) this.cursor.classList.remove(this.fadeOutClass);\n\t      }\n\t\n\t      var humanize = this.humanizer(this.typeSpeed);\n\t      var numChars = 1;\n\t\n\t      if (this.pause.status === true) {\n\t        this.setPauseStatus(curString, curStrPos, true);\n\t        return;\n\t      }\n\t\n\t      // contain typing function in a timeout humanize'd delay\n\t      this.timeout = setTimeout(function () {\n\t        // skip over any HTML chars\n\t        curStrPos = _htmlParserJs.htmlParser.typeHtmlChars(curString, curStrPos, _this2);\n\t\n\t        var pauseTime = 0;\n\t        var substr = curString.substr(curStrPos);\n\t        // check for an escape character before a pause value\n\t        // format: \\^\\d+ .. eg: ^1000 .. should be able to print the ^ too using ^^\n\t        // single ^ are removed from string\n\t        if (substr.charAt(0) === '^') {\n\t          if (/^\\^\\d+/.test(substr)) {\n\t            var skip = 1; // skip at least 1\n\t            substr = /\\d+/.exec(substr)[0];\n\t            skip += substr.length;\n\t            pauseTime = parseInt(substr);\n\t            _this2.temporaryPause = true;\n\t            _this2.options.onTypingPaused(_this2.arrayPos, _this2);\n\t            // strip out the escape character and pause value so they're not printed\n\t            curString = curString.substring(0, curStrPos) + curString.substring(curStrPos + skip);\n\t            _this2.toggleBlinking(true);\n\t          }\n\t        }\n\t\n\t        // check for skip characters formatted as\n\t        // \"this is a `string to print NOW` ...\"\n\t        if (substr.charAt(0) === '`') {\n\t          while (curString.substr(curStrPos + numChars).charAt(0) !== '`') {\n\t            numChars++;\n\t            if (curStrPos + numChars > curString.length) break;\n\t          }\n\t          // strip out the escape characters and append all the string in between\n\t          var stringBeforeSkip = curString.substring(0, curStrPos);\n\t          var stringSkipped = curString.substring(stringBeforeSkip.length + 1, curStrPos + numChars);\n\t          var stringAfterSkip = curString.substring(curStrPos + numChars + 1);\n\t          curString = stringBeforeSkip + stringSkipped + stringAfterSkip;\n\t          numChars--;\n\t        }\n\t\n\t        // timeout for any pause after a character\n\t        _this2.timeout = setTimeout(function () {\n\t          // Accounts for blinking while paused\n\t          _this2.toggleBlinking(false);\n\t\n\t          // We're done with this sentence!\n\t          if (curStrPos === curString.length) {\n\t            _this2.doneTyping(curString, curStrPos);\n\t          } else {\n\t            _this2.keepTyping(curString, curStrPos, numChars);\n\t          }\n\t          // end of character pause\n\t          if (_this2.temporaryPause) {\n\t            _this2.temporaryPause = false;\n\t            _this2.options.onTypingResumed(_this2.arrayPos, _this2);\n\t          }\n\t        }, pauseTime);\n\t\n\t        // humanized value for typing\n\t      }, humanize);\n\t    }\n\t\n\t    /**\n\t     * Continue to the next string & begin typing\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'keepTyping',\n\t    value: function keepTyping(curString, curStrPos, numChars) {\n\t      // call before functions if applicable\n\t      if (curStrPos === 0) {\n\t        this.toggleBlinking(false);\n\t        this.options.preStringTyped(this.arrayPos, this);\n\t      }\n\t      // start typing each new char into existing string\n\t      // curString: arg, this.el.html: original text inside element\n\t      curStrPos += numChars;\n\t      var nextString = curString.substr(0, curStrPos);\n\t      this.replaceText(nextString);\n\t      // loop the function\n\t      this.typewrite(curString, curStrPos);\n\t    }\n\t\n\t    /**\n\t     * We're done typing all strings\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'doneTyping',\n\t    value: function doneTyping(curString, curStrPos) {\n\t      var _this3 = this;\n\t\n\t      // fires callback function\n\t      this.options.onStringTyped(this.arrayPos, this);\n\t      this.toggleBlinking(true);\n\t      // is this the final string\n\t      if (this.arrayPos === this.strings.length - 1) {\n\t        // callback that occurs on the last typed string\n\t        this.complete();\n\t        // quit if we wont loop back\n\t        if (this.loop === false || this.curLoop === this.loopCount) {\n\t          return;\n\t        }\n\t      }\n\t      this.timeout = setTimeout(function () {\n\t        _this3.backspace(curString, curStrPos);\n\t      }, this.backDelay);\n\t    }\n\t\n\t    /**\n\t     * Backspaces 1 character at a time\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'backspace',\n\t    value: function backspace(curString, curStrPos) {\n\t      var _this4 = this;\n\t\n\t      if (this.pause.status === true) {\n\t        this.setPauseStatus(curString, curStrPos, true);\n\t        return;\n\t      }\n\t      if (this.fadeOut) return this.initFadeOut();\n\t\n\t      this.toggleBlinking(false);\n\t      var humanize = this.humanizer(this.backSpeed);\n\t\n\t      this.timeout = setTimeout(function () {\n\t        curStrPos = _htmlParserJs.htmlParser.backSpaceHtmlChars(curString, curStrPos, _this4);\n\t        // replace text with base text + typed characters\n\t        var curStringAtPosition = curString.substr(0, curStrPos);\n\t        _this4.replaceText(curStringAtPosition);\n\t\n\t        // if smartBack is enabled\n\t        if (_this4.smartBackspace) {\n\t          // the remaining part of the current string is equal of the same part of the new string\n\t          var nextString = _this4.strings[_this4.arrayPos + 1];\n\t          if (nextString && curStringAtPosition === nextString.substr(0, curStrPos)) {\n\t            _this4.stopNum = curStrPos;\n\t          } else {\n\t            _this4.stopNum = 0;\n\t          }\n\t        }\n\t\n\t        // if the number (id of character in current string) is\n\t        // less than the stop number, keep going\n\t        if (curStrPos > _this4.stopNum) {\n\t          // subtract characters one by one\n\t          curStrPos--;\n\t          // loop the function\n\t          _this4.backspace(curString, curStrPos);\n\t        } else if (curStrPos <= _this4.stopNum) {\n\t          // if the stop number has been reached, increase\n\t          // array position to next string\n\t          _this4.arrayPos++;\n\t          // When looping, begin at the beginning after backspace complete\n\t          if (_this4.arrayPos === _this4.strings.length) {\n\t            _this4.arrayPos = 0;\n\t            _this4.options.onLastStringBackspaced();\n\t            _this4.shuffleStringsIfNeeded();\n\t            _this4.begin();\n\t          } else {\n\t            _this4.typewrite(_this4.strings[_this4.sequence[_this4.arrayPos]], curStrPos);\n\t          }\n\t        }\n\t        // humanized value for typing\n\t      }, humanize);\n\t    }\n\t\n\t    /**\n\t     * Full animation is complete\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'complete',\n\t    value: function complete() {\n\t      this.options.onComplete(this);\n\t      if (this.loop) {\n\t        this.curLoop++;\n\t      } else {\n\t        this.typingComplete = true;\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Has the typing been stopped\n\t     * @param {string} curString the current string in the strings array\n\t     * @param {number} curStrPos the current position in the curString\n\t     * @param {boolean} isTyping\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'setPauseStatus',\n\t    value: function setPauseStatus(curString, curStrPos, isTyping) {\n\t      this.pause.typewrite = isTyping;\n\t      this.pause.curString = curString;\n\t      this.pause.curStrPos = curStrPos;\n\t    }\n\t\n\t    /**\n\t     * Toggle the blinking cursor\n\t     * @param {boolean} isBlinking\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'toggleBlinking',\n\t    value: function toggleBlinking(isBlinking) {\n\t      if (!this.cursor) return;\n\t      // if in paused state, don't toggle blinking a 2nd time\n\t      if (this.pause.status) return;\n\t      if (this.cursorBlinking === isBlinking) return;\n\t      this.cursorBlinking = isBlinking;\n\t      if (isBlinking) {\n\t        this.cursor.classList.add('typed-cursor--blink');\n\t      } else {\n\t        this.cursor.classList.remove('typed-cursor--blink');\n\t      }\n\t    }\n\t\n\t    /**\n\t     * Speed in MS to type\n\t     * @param {number} speed\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'humanizer',\n\t    value: function humanizer(speed) {\n\t      return Math.round(Math.random() * speed / 2) + speed;\n\t    }\n\t\n\t    /**\n\t     * Shuffle the sequence of the strings array\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'shuffleStringsIfNeeded',\n\t    value: function shuffleStringsIfNeeded() {\n\t      if (!this.shuffle) return;\n\t      this.sequence = this.sequence.sort(function () {\n\t        return Math.random() - 0.5;\n\t      });\n\t    }\n\t\n\t    /**\n\t     * Adds a CSS class to fade out current string\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'initFadeOut',\n\t    value: function initFadeOut() {\n\t      var _this5 = this;\n\t\n\t      this.el.className += ' ' + this.fadeOutClass;\n\t      if (this.cursor) this.cursor.className += ' ' + this.fadeOutClass;\n\t      return setTimeout(function () {\n\t        _this5.arrayPos++;\n\t        _this5.replaceText('');\n\t\n\t        // Resets current string if end of loop reached\n\t        if (_this5.strings.length > _this5.arrayPos) {\n\t          _this5.typewrite(_this5.strings[_this5.sequence[_this5.arrayPos]], 0);\n\t        } else {\n\t          _this5.typewrite(_this5.strings[0], 0);\n\t          _this5.arrayPos = 0;\n\t        }\n\t      }, this.fadeOutDelay);\n\t    }\n\t\n\t    /**\n\t     * Replaces current text in the HTML element\n\t     * depending on element type\n\t     * @param {string} str\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'replaceText',\n\t    value: function replaceText(str) {\n\t      if (this.attr) {\n\t        this.el.setAttribute(this.attr, str);\n\t      } else {\n\t        if (this.isInput) {\n\t          this.el.value = str;\n\t        } else if (this.contentType === 'html') {\n\t          this.el.innerHTML = str;\n\t        } else {\n\t          this.el.textContent = str;\n\t        }\n\t      }\n\t    }\n\t\n\t    /**\n\t     * If using input elements, bind focus in order to\n\t     * start and stop the animation\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'bindFocusEvents',\n\t    value: function bindFocusEvents() {\n\t      var _this6 = this;\n\t\n\t      if (!this.isInput) return;\n\t      this.el.addEventListener('focus', function (e) {\n\t        _this6.stop();\n\t      });\n\t      this.el.addEventListener('blur', function (e) {\n\t        if (_this6.el.value && _this6.el.value.length !== 0) {\n\t          return;\n\t        }\n\t        _this6.start();\n\t      });\n\t    }\n\t\n\t    /**\n\t     * On init, insert the cursor element\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'insertCursor',\n\t    value: function insertCursor() {\n\t      if (!this.showCursor) return;\n\t      if (this.cursor) return;\n\t      this.cursor = document.createElement('span');\n\t      this.cursor.className = 'typed-cursor';\n\t      this.cursor.innerHTML = this.cursorChar;\n\t      this.el.parentNode && this.el.parentNode.insertBefore(this.cursor, this.el.nextSibling);\n\t    }\n\t  }]);\n\t\n\t  return Typed;\n\t})();\n\t\n\texports['default'] = Typed;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar _defaultsJs = __webpack_require__(2);\n\t\n\tvar _defaultsJs2 = _interopRequireDefault(_defaultsJs);\n\t\n\t/**\n\t * Initialize the Typed object\n\t */\n\t\n\tvar Initializer = (function () {\n\t  function Initializer() {\n\t    _classCallCheck(this, Initializer);\n\t  }\n\t\n\t  _createClass(Initializer, [{\n\t    key: 'load',\n\t\n\t    /**\n\t     * Load up defaults & options on the Typed instance\n\t     * @param {Typed} self instance of Typed\n\t     * @param {object} options options object\n\t     * @param {string} elementId HTML element ID _OR_ instance of HTML element\n\t     * @private\n\t     */\n\t\n\t    value: function load(self, options, elementId) {\n\t      // chosen element to manipulate text\n\t      if (typeof elementId === 'string') {\n\t        self.el = document.querySelector(elementId);\n\t      } else {\n\t        self.el = elementId;\n\t      }\n\t\n\t      self.options = _extends({}, _defaultsJs2['default'], options);\n\t\n\t      // attribute to type into\n\t      self.isInput = self.el.tagName.toLowerCase() === 'input';\n\t      self.attr = self.options.attr;\n\t      self.bindInputFocusEvents = self.options.bindInputFocusEvents;\n\t\n\t      // show cursor\n\t      self.showCursor = self.isInput ? false : self.options.showCursor;\n\t\n\t      // custom cursor\n\t      self.cursorChar = self.options.cursorChar;\n\t\n\t      // Is the cursor blinking\n\t      self.cursorBlinking = true;\n\t\n\t      // text content of element\n\t      self.elContent = self.attr ? self.el.getAttribute(self.attr) : self.el.textContent;\n\t\n\t      // html or plain text\n\t      self.contentType = self.options.contentType;\n\t\n\t      // typing speed\n\t      self.typeSpeed = self.options.typeSpeed;\n\t\n\t      // add a delay before typing starts\n\t      self.startDelay = self.options.startDelay;\n\t\n\t      // backspacing speed\n\t      self.backSpeed = self.options.backSpeed;\n\t\n\t      // only backspace what doesn't match the previous string\n\t      self.smartBackspace = self.options.smartBackspace;\n\t\n\t      // amount of time to wait before backspacing\n\t      self.backDelay = self.options.backDelay;\n\t\n\t      // Fade out instead of backspace\n\t      self.fadeOut = self.options.fadeOut;\n\t      self.fadeOutClass = self.options.fadeOutClass;\n\t      self.fadeOutDelay = self.options.fadeOutDelay;\n\t\n\t      // variable to check whether typing is currently paused\n\t      self.isPaused = false;\n\t\n\t      // input strings of text\n\t      self.strings = self.options.strings.map(function (s) {\n\t        return s.trim();\n\t      });\n\t\n\t      // div containing strings\n\t      if (typeof self.options.stringsElement === 'string') {\n\t        self.stringsElement = document.querySelector(self.options.stringsElement);\n\t      } else {\n\t        self.stringsElement = self.options.stringsElement;\n\t      }\n\t\n\t      if (self.stringsElement) {\n\t        self.strings = [];\n\t        self.stringsElement.style.display = 'none';\n\t        var strings = Array.prototype.slice.apply(self.stringsElement.children);\n\t        var stringsLength = strings.length;\n\t\n\t        if (stringsLength) {\n\t          for (var i = 0; i < stringsLength; i += 1) {\n\t            var stringEl = strings[i];\n\t            self.strings.push(stringEl.innerHTML.trim());\n\t          }\n\t        }\n\t      }\n\t\n\t      // character number position of current string\n\t      self.strPos = 0;\n\t\n\t      // current array position\n\t      self.arrayPos = 0;\n\t\n\t      // index of string to stop backspacing on\n\t      self.stopNum = 0;\n\t\n\t      // Looping logic\n\t      self.loop = self.options.loop;\n\t      self.loopCount = self.options.loopCount;\n\t      self.curLoop = 0;\n\t\n\t      // shuffle the strings\n\t      self.shuffle = self.options.shuffle;\n\t      // the order of strings\n\t      self.sequence = [];\n\t\n\t      self.pause = {\n\t        status: false,\n\t        typewrite: true,\n\t        curString: '',\n\t        curStrPos: 0\n\t      };\n\t\n\t      // When the typing is complete (when not looped)\n\t      self.typingComplete = false;\n\t\n\t      // Set the order in which the strings are typed\n\t      for (var i in self.strings) {\n\t        self.sequence[i] = i;\n\t      }\n\t\n\t      // If there is some text in the element\n\t      self.currentElContent = this.getCurrentElContent(self);\n\t\n\t      self.autoInsertCss = self.options.autoInsertCss;\n\t\n\t      this.appendAnimationCss(self);\n\t    }\n\t  }, {\n\t    key: 'getCurrentElContent',\n\t    value: function getCurrentElContent(self) {\n\t      var elContent = '';\n\t      if (self.attr) {\n\t        elContent = self.el.getAttribute(self.attr);\n\t      } else if (self.isInput) {\n\t        elContent = self.el.value;\n\t      } else if (self.contentType === 'html') {\n\t        elContent = self.el.innerHTML;\n\t      } else {\n\t        elContent = self.el.textContent;\n\t      }\n\t      return elContent;\n\t    }\n\t  }, {\n\t    key: 'appendAnimationCss',\n\t    value: function appendAnimationCss(self) {\n\t      var cssDataName = 'data-typed-js-css';\n\t      if (!self.autoInsertCss) {\n\t        return;\n\t      }\n\t      if (!self.showCursor && !self.fadeOut) {\n\t        return;\n\t      }\n\t      if (document.querySelector('[' + cssDataName + ']')) {\n\t        return;\n\t      }\n\t\n\t      var css = document.createElement('style');\n\t      css.type = 'text/css';\n\t      css.setAttribute(cssDataName, true);\n\t\n\t      var innerCss = '';\n\t      if (self.showCursor) {\n\t        innerCss += '\\n        .typed-cursor{\\n          opacity: 1;\\n        }\\n        .typed-cursor.typed-cursor--blink{\\n          animation: typedjsBlink 0.7s infinite;\\n          -webkit-animation: typedjsBlink 0.7s infinite;\\n                  animation: typedjsBlink 0.7s infinite;\\n        }\\n        @keyframes typedjsBlink{\\n          50% { opacity: 0.0; }\\n        }\\n        @-webkit-keyframes typedjsBlink{\\n          0% { opacity: 1; }\\n          50% { opacity: 0.0; }\\n          100% { opacity: 1; }\\n        }\\n      ';\n\t      }\n\t      if (self.fadeOut) {\n\t        innerCss += '\\n        .typed-fade-out{\\n          opacity: 0;\\n          transition: opacity .25s;\\n        }\\n        .typed-cursor.typed-cursor--blink.typed-fade-out{\\n          -webkit-animation: 0;\\n          animation: 0;\\n        }\\n      ';\n\t      }\n\t      if (css.length === 0) {\n\t        return;\n\t      }\n\t      css.innerHTML = innerCss;\n\t      document.body.appendChild(css);\n\t    }\n\t  }]);\n\t\n\t  return Initializer;\n\t})();\n\t\n\texports['default'] = Initializer;\n\tvar initializer = new Initializer();\n\texports.initializer = initializer;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports) {\n\n\t/**\n\t * Defaults & options\n\t * @returns {object} Typed defaults & options\n\t * @public\n\t */\n\t\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\tvar defaults = {\n\t  /**\n\t   * @property {array} strings strings to be typed\n\t   * @property {string} stringsElement ID of element containing string children\n\t   */\n\t  strings: ['These are the default values...', 'You know what you should do?', 'Use your own!', 'Have a great day!'],\n\t  stringsElement: null,\n\t\n\t  /**\n\t   * @property {number} typeSpeed type speed in milliseconds\n\t   */\n\t  typeSpeed: 0,\n\t\n\t  /**\n\t   * @property {number} startDelay time before typing starts in milliseconds\n\t   */\n\t  startDelay: 0,\n\t\n\t  /**\n\t   * @property {number} backSpeed backspacing speed in milliseconds\n\t   */\n\t  backSpeed: 0,\n\t\n\t  /**\n\t   * @property {boolean} smartBackspace only backspace what doesn't match the previous string\n\t   */\n\t  smartBackspace: true,\n\t\n\t  /**\n\t   * @property {boolean} shuffle shuffle the strings\n\t   */\n\t  shuffle: false,\n\t\n\t  /**\n\t   * @property {number} backDelay time before backspacing in milliseconds\n\t   */\n\t  backDelay: 700,\n\t\n\t  /**\n\t   * @property {boolean} fadeOut Fade out instead of backspace\n\t   * @property {string} fadeOutClass css class for fade animation\n\t   * @property {boolean} fadeOutDelay Fade out delay in milliseconds\n\t   */\n\t  fadeOut: false,\n\t  fadeOutClass: 'typed-fade-out',\n\t  fadeOutDelay: 500,\n\t\n\t  /**\n\t   * @property {boolean} loop loop strings\n\t   * @property {number} loopCount amount of loops\n\t   */\n\t  loop: false,\n\t  loopCount: Infinity,\n\t\n\t  /**\n\t   * @property {boolean} showCursor show cursor\n\t   * @property {string} cursorChar character for cursor\n\t   * @property {boolean} autoInsertCss insert CSS for cursor and fadeOut into HTML <head>\n\t   */\n\t  showCursor: true,\n\t  cursorChar: '|',\n\t  autoInsertCss: true,\n\t\n\t  /**\n\t   * @property {string} attr attribute for typing\n\t   * Ex: input placeholder, value, or just HTML text\n\t   */\n\t  attr: null,\n\t\n\t  /**\n\t   * @property {boolean} bindInputFocusEvents bind to focus and blur if el is text input\n\t   */\n\t  bindInputFocusEvents: false,\n\t\n\t  /**\n\t   * @property {string} contentType 'html' or 'null' for plaintext\n\t   */\n\t  contentType: 'html',\n\t\n\t  /**\n\t   * All typing is complete\n\t   * @param {Typed} self\n\t   */\n\t  onComplete: function onComplete(self) {},\n\t\n\t  /**\n\t   * Before each string is typed\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  preStringTyped: function preStringTyped(arrayPos, self) {},\n\t\n\t  /**\n\t   * After each string is typed\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onStringTyped: function onStringTyped(arrayPos, self) {},\n\t\n\t  /**\n\t   * During looping, after last string is typed\n\t   * @param {Typed} self\n\t   */\n\t  onLastStringBackspaced: function onLastStringBackspaced(self) {},\n\t\n\t  /**\n\t   * Typing has been stopped\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onTypingPaused: function onTypingPaused(arrayPos, self) {},\n\t\n\t  /**\n\t   * Typing has been started after being stopped\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onTypingResumed: function onTypingResumed(arrayPos, self) {},\n\t\n\t  /**\n\t   * After reset\n\t   * @param {Typed} self\n\t   */\n\t  onReset: function onReset(self) {},\n\t\n\t  /**\n\t   * After stop\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onStop: function onStop(arrayPos, self) {},\n\t\n\t  /**\n\t   * After start\n\t   * @param {number} arrayPos\n\t   * @param {Typed} self\n\t   */\n\t  onStart: function onStart(arrayPos, self) {},\n\t\n\t  /**\n\t   * After destroy\n\t   * @param {Typed} self\n\t   */\n\t  onDestroy: function onDestroy(self) {}\n\t};\n\t\n\texports['default'] = defaults;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\t\n\t/**\n\t * TODO: These methods can probably be combined somehow\n\t * Parse HTML tags & HTML Characters\n\t */\n\t\n\t'use strict';\n\t\n\tObject.defineProperty(exports, '__esModule', {\n\t  value: true\n\t});\n\t\n\tvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\t\n\tvar HTMLParser = (function () {\n\t  function HTMLParser() {\n\t    _classCallCheck(this, HTMLParser);\n\t  }\n\t\n\t  _createClass(HTMLParser, [{\n\t    key: 'typeHtmlChars',\n\t\n\t    /**\n\t     * Type HTML tags & HTML Characters\n\t     * @param {string} curString Current string\n\t     * @param {number} curStrPos Position in current string\n\t     * @param {Typed} self instance of Typed\n\t     * @returns {number} a new string position\n\t     * @private\n\t     */\n\t\n\t    value: function typeHtmlChars(curString, curStrPos, self) {\n\t      if (self.contentType !== 'html') return curStrPos;\n\t      var curChar = curString.substr(curStrPos).charAt(0);\n\t      if (curChar === '<' || curChar === '&') {\n\t        var endTag = '';\n\t        if (curChar === '<') {\n\t          endTag = '>';\n\t        } else {\n\t          endTag = ';';\n\t        }\n\t        while (curString.substr(curStrPos + 1).charAt(0) !== endTag) {\n\t          curStrPos++;\n\t          if (curStrPos + 1 > curString.length) {\n\t            break;\n\t          }\n\t        }\n\t        curStrPos++;\n\t      }\n\t      return curStrPos;\n\t    }\n\t\n\t    /**\n\t     * Backspace HTML tags and HTML Characters\n\t     * @param {string} curString Current string\n\t     * @param {number} curStrPos Position in current string\n\t     * @param {Typed} self instance of Typed\n\t     * @returns {number} a new string position\n\t     * @private\n\t     */\n\t  }, {\n\t    key: 'backSpaceHtmlChars',\n\t    value: function backSpaceHtmlChars(curString, curStrPos, self) {\n\t      if (self.contentType !== 'html') return curStrPos;\n\t      var curChar = curString.substr(curStrPos).charAt(0);\n\t      if (curChar === '>' || curChar === ';') {\n\t        var endTag = '';\n\t        if (curChar === '>') {\n\t          endTag = '<';\n\t        } else {\n\t          endTag = '&';\n\t        }\n\t        while (curString.substr(curStrPos - 1).charAt(0) !== endTag) {\n\t          curStrPos--;\n\t          if (curStrPos < 0) {\n\t            break;\n\t          }\n\t        }\n\t        curStrPos--;\n\t      }\n\t      return curStrPos;\n\t    }\n\t  }]);\n\t\n\t  return HTMLParser;\n\t})();\n\t\n\texports['default'] = HTMLParser;\n\tvar htmlParser = new HTMLParser();\n\texports.htmlParser = htmlParser;\n\n/***/ })\n/******/ ])\n});\n;"],"sourceRoot":""}